name: FibCalc
on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build_and_push_backend:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Buildx set-up
        id: buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          cache-from: type=registry,src=docker.io/${{secrets.DOCKER_HUB_USERNAME}}/zadanie1-backend:latest
          cache-to: type=registry,src=docker.io/${{secrets.DOCKER_HUB_USERNAME}}/zadanie1-backend:latest,mode=max
          platforms: linux/amd64,linux/arm64
          context: backend
          push: true
          tags: |
            ${{secrets.DOCKER_HUB_USERNAME}}/zadanie1-backend:latest
          
           
  publish-backend-gpr:
    needs: build_and_push_backend
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: backend
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
          scope: '@persi52'
      - run: npm ci
      - run: npm publish 
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}  
      

  build_and_push_frontend:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: my-app
    
    steps:
      - uses: actions/checkout@v3

      - name: Buildx set-up
        id: buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          cache-from: type=registry,src=docker.io/${{secrets.DOCKER_HUB_USERNAME}}/zadanie1-frontend:latest
          cache-to: type=registry,src=docker.io/${{secrets.DOCKER_HUB_USERNAME}}/zadanie1-frontend:latest,mode=max
          platforms: linux/amd64,linux/arm64
          context: my-app
          push: true
          tags: |
            ${{secrets.DOCKER_HUB_USERNAME}}/zadanie1-frontend:latest
 
  publish-frontend-gpr:
    needs: build_and_push_frontend
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: my-app
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
          scope: '@persi52'
      - run: npm ci
      - run: npm publish 
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
      
