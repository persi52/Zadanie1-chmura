name: FibCalc
on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build_and_push_backend:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: backend
    
    steps:
      - uses: actions/checkout@v3

      - name: Buildx set-up
        id: buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: backend
          push: true
          build-args: |
            DOCKER_CLI_EXPERIMENTAL=enabled
            BUILDKIT_INLINE_CACHE=1
          tags: |
            ${{secrets.DOCKER_HUB_USERNAME}}/zadanie1-backend:latest
          build: |
            docker buildx build --push \
           --cache-to=type=registry,ref=persi52/zadanie1-backend:latest,mode=max \
           --cache-from=type=registry,ref=persi52/zadanie1-backend:latest \
           --platform=linux/amd64,linux/arm64 \
           --tag=persi52/zadanie1-backend:latest .


            
  publish-backend-gpr:
    needs: build_and_push_backend
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: backend
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
          scope: '@persi52'
      - run: npm ci
      - run: npm publish 
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}  
      

  build_and_push_frontend:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: my-app
    
    steps:
      - uses: actions/checkout@v3

      - name: Buildx set-up
        id: buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v3
      #   with:
      #     cache-from: type=registry,ref=persi52/zadanie1-frontend:latest
      #     cache-to: type=registry,ref=persi52/zadanie1-frontend:latest,mode=max
      #     context: my-app
      #     push: true
      #     tags: |
      #       ${{secrets.DOCKER_HUB_USERNAME}}/zadanie1-frontend:latest
      - name: build and push the image
        run: |
          docker buildx build --push -t ${{secrets.DOCKER_HUB_USERNAME}}/zadanie1-frontend:latest \
            --cache-to=type=registry,ref=persi52/zadanie1-frontend:latest,mode=max \
            --cache-from=type=registry,ref=persi52/zadanie1-frontend:latest \
            --platform=linux/amd64 .
 
  publish-frontend-gpr:
    needs: build_and_push_frontend
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: my-app
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
          scope: '@persi52'
      - run: npm ci
      - run: npm publish 
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
      
